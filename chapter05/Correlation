# Variance = how a single variable deviates from its mean
# Covariance = measures how two variables vary in tandem from their means
# Check out the book theory for more details

from dfs2.chapter04 import dot

def covariance(xs: List[float], ys: List[float]) -> float:
    assert len(xs) == len(ys), "xs and ys must have same number of elements"
    
    return dot(de_mean(xs), de_mean(ys)) / (len(xs) - 1)
    
# Becuase covariance can be hard to interpret...correlation is more common to look
# Correlation = divides out the standard deviations of two variables, any other variable is assumed to be equal. It is unitless.
# Always lies between -1 (perfect anticorrelation) and 1 (perfect correlation). 0 = no linear relationship between 2 variables.
# Example of relationships looked for corelation:
# "how x_i compares to mean(x) gives us information about how y_i compares to mean(y)"

def correlation(xs: List[float], ys: List[float]) -> float:
    """Measures how much xs and ys vary in tandem about their means"""
    stdev_x = standard_deviation(xs)
    stdev_y = standard_deviation(ys)
    if stdev_x > 0 and stdev_y > 0:
        return covariance(xs, ys) / stdev_x / stdev_y
    else:
        return 0      # if no variation, correlation is zero
        
# Correlation is not causation...but still it is a hint worth looking closer at the variables.
